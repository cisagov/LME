#!/usr/bin/expect

# Change to the LME directory containing files for the Linux server
cd /opt/lme/Chapter\ 3\ Files/

# Adjust the timeout if necessary
set timeout 60
set expect_out(buffer_size) 1000000

log_file -a output.log

spawn ./deploy.sh install
sleep 1
expect {
  -re {.*OK.*} {
      send "\r"
  }
  -re {.*Proceed.*} {
      send "y\r"
  }
}


expect {
    -re {.*Please reboot and re-run this script to finish the install.*} {
        send_user "Reboot required. Exiting...\n"
        exit
    }
    -re "Enter the IP of this Linux server.*" {
        sleep 1
        send "\r"
    }
}

sleep 1
expect -re {Windows Event Collector}
sleep 1
send "ls1.lme.local\r"

sleep 1

<<<<<<< HEAD
expect -re {.*ntinue with self signed certificates.*: y}
=======
expect -re {continue with self signed certificates.*: y}
>>>>>>> 450e17d (Rebase latest changes from main into release-1.4.0 (#222))
sleep 1
send "\r"
sleep 1

<<<<<<< HEAD
expect -re {.*ip Docker Install\? \(\[y\]es/\[n\]o\): n}
sleep 1
send "\r"



set timeout 310 
expect {
    -re {Waiting for Elasticsearch to be ready} {
        puts " Elasticsearch is being prepared"
        exp_continue
    }
    -re {\.} {
        puts " . "
        exp_continue
    }
    -re {We think your main disk is} {
        puts " Disk message received"
        exp_continue
    }
    -re {Bootstrapping} {
        puts " Bootstrapping in progress"
        exp_continue
    }
    -re {Uploading Kibana dashboards} {
        puts " Kibana dashboards are being uploaded"
        exp_continue
    }
}
=======
expect -re {Skip Docker Install\? \(\[y\]es/\[n\]o\): n}
sleep 1
send "\r"
set timeout 600
>>>>>>> 450e17d (Rebase latest changes from main into release-1.4.0 (#222))

expect eof

log_file

exec cat output.log
